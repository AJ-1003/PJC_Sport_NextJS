// React
import React from 'react';

// Next
import Head from 'next/head';
import Image from 'next/image';

// Contentful
import client from '/contentful/contentful.data';

// Components
import BicycleSkeleton from '../../components/skeletons/bicycle-skeleton';

// Images

// Data

// Styles
import styled from 'styled-components';
import BicycleSpecifications from '../../components/components-bicycles/bicycle-details-specifications/bicycle-details-specifications.component';

export const getStaticPaths = async () => {
  const res = await client.getEntries({
    content_type: 'bicycle'
  });

  const paths = res.items.map(item => {
    return {
      params: {
        slug: item.fields.name
      }
    }
  });

  return {
    paths,
    fallback: true
  };
};

export const getStaticProps = async ({ params }) => {
  const { items } = await client.getEntries({
    content_type: 'bicycle',
    'fields.name': params.slug
  });

  if (!items.length) {
    return {
      redirect: {
        destination: '/',
        permanent: false,
      },
    }
  }

  return {
    props:
    {
      bicycle: items[0]
    },
    revalidate: 1
  };
};

const Main = styled.main`
  background: url(${props => props.backgroundImg}) top / 100% no-repeat;
`;

const Details = styled.div`
  position: relative;
`;

const DetailsContainer = styled.div`
  width: 80%;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  
  h2 {
    color: var(--grey);
  }

  h3 {
    color: var(--orange);
  }
`;

const DetailsHeading = styled.div`
  position: relative;
  padding-top: 5rem;
  text-align: center;
  border-radius: 0.5rem 0.5rem 0 0;
  height: 100vh;

  h1 {
    font-size: 6rem;
    margin: 0;
    color: rgba(235, 235, 235, 0.7);
    text-shadow: 5px 5px 10px rgba(0, 0, 0, 0.2);
    text-transform: uppercase;
  }
`;

const DetailsSection = styled.div`
  display: flex;
  flex-direction: column;
  background: rgba(231, 231, 231, 0.9);
  padding: 2rem;
`;

const DetailsTopSection = styled.div`

`;

const DescriptionContainer = styled.div`
  margin: 0 auto;
`;

const DetailsBottomSection = styled.div`
  display: flex;
  flex-direction: column;
  gap: 1rem;
`;

const Top = styled.div`
  padding-top: 2rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
`;

const BicycleBrandModel = styled.span`

`;

const AvailableSizes = styled.div`
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  gap: 5px;
    
  li {
    padding: 0 5px;
    margin: 0;
  }
`;

const Bottom = styled.div`

`;

const Price = styled.div`
  display: flex;
  flex-direction: row;
  gap: 5px;
  justify-content: flex-start;
`;

const BicycleDetails = ({ bicycle }) => {
  if (!bicycle) {
    return (
      <BicycleSkeleton />
    )
  };

  const {
    name,
    brand,
    model,
    description,
    frameMaterial,
    availableSizes,
    fork,
    rearShock,
    chainwheel,
    frontDerailleur,
    rearDerailleur,
    shifters,
    chain,
    cassette,
    bottomBracket,
    speed,
    brakes,
    wheels,
    frontHub,
    rearHub,
    tyres,
    stem,
    seatPost,
    extras,
    priceNow,
    priceWas,
    detailsImage,
    detailsImageWidth,
    detailsImageHeight,
    altText,
    onSpecial } = bicycle.fields;

  var specs = {
    frameMaterial,
    fork,
    rearShock,
    chainwheel,
    frontDerailleur,
    rearDerailleur,
    shifters,
    chain,
    cassette,
    bottomBracket,
    speed,
    brakes,
    wheels,
    frontHub,
    rearHub,
    tyres,
    stem,
    seatPost,
    extras
  };

  var sizes = '';

  availableSizes.map(size => {
    sizes += ' ' + size;
  });

  return (
    <div>
      <Head>
        <title>PJC Sport & Cycles - {brand} {model}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Main
        backgroundImg={'https:' + detailsImage.fields.file.url}>
        <Details>
          <DetailsContainer>
            <DetailsHeading>
              <h1>{brand} {model}</h1>
            </DetailsHeading>
            <DetailsSection className='rounded-corners'>
              <DetailsTopSection>
                <DescriptionContainer>
                  <h2>Description</h2>
                  <p>{description}</p>
                </DescriptionContainer>
              </DetailsTopSection>
              <DetailsBottomSection>
                <Top>
                  <h2>Details</h2>
                  <BicycleBrandModel className='bold'>
                    {brand} {model}
                  </BicycleBrandModel>
                  <AvailableSizes>
                    <span className='bold'>Avaialable sizes: </span>
                    <span>{sizes}</span>
                  </AvailableSizes>
                  <div>
                    {onSpecial ?
                      <Price>
                        <span className='bold'>Price:</span>
                        <div className='price-was'>Was - R{priceWas}.00</div>
                        <div className='price'>Now - R{priceNow}.00</div>
                      </Price>
                      :
                      <Price>
                        <span className='bold'>Price:</span>
                        <span className='price'>R{priceNow}.00</span>
                      </Price>
                    }
                  </div>
                </Top>
                <Bottom>
                  <h2>Specifications</h2>
                  <BicycleSpecifications content={specs} />
                </Bottom>
              </DetailsBottomSection>
            </DetailsSection>
          </DetailsContainer>
        </Details>
      </Main>
    </div>
  );
};

export default BicycleDetails;